steps:
  - mkimg: "{{ output }}"
    size: 4G
  - mklabel: msdos
    device: "{{ output }}"
  - mkpart: primary
    device: "{{ output }}"
    start: 0%
    end: 100%
    tag: rootfs
  - kpartx: "{{ output }}"
  - mkfs: ext2
    partition: rootfs

  # mount root filesystem and unpack cached image
  - mount: rootfs
  - unpack-rootfs: rootfs

  # install Debian-stable (bookworm) + kerberos5/openafs/samba
  - debootstrap: bookworm
    mirror: http://deb.debian.org/debian
    target: rootfs
    unless: rootfs_unpacked
  - virtual-filesystems: rootfs
  - apt: install
    packages:
      - avahi-utils
      - chrony
      - grub-pc
      - krb5-user
      - linux-image-amd64
      - net-tools
      - parted
      - patch
      # openafs
      - openafs-client
      - openafs-krb5
      # samba
      - samba
      # webauth
      - gunicorn
      - python3-flask
    tag: rootfs
    unless: rootfs_unpacked

  # cache image state before customizations
  - cache-rootfs: rootfs
    unless: rootfs_unpacked

  - fstab: rootfs

  # generic configuration and fixups
  - chroot: rootfs
    shell: |
      echo openafs > /etc/hostname
      # Allow root logins locally with no password
      sed -i 's,root:[^:]*:,root::,' /etc/shadow

  # networking
  - create-file: /etc/network/interfaces.d/eth0
    contents: |
      auto eth0
      allow-hotplug eth0
      iface eth0 inet dhcp

  # kerberos configuration
  - create-file: /etc/krb5.conf.patch
    contents: |
      --- krb5.conf.orig	2023-08-22 13:07:11.016602662 -0400
      +++ krb5.conf	2023-08-22 13:08:04.161730311 -0400
      @@ -83,2 +83,3 @@
               .utoronto.ca = UTORONTO.CA
      +	.cs.cmu.edu = CS.CMU.EDU
       
  - chroot: rootfs
    shell: |
      sed -i -e 's/\(default_realm.*=\).*$/\1 ANDREW.CMU.EDU/' /etc/krb5.conf
      patch /etc/krb5.conf /etc/krb5.conf.patch

  # openafs configuration
  - create-file: /etc/openafs/afs.conf.client
    contents: |
      AFS_CLIENT=true
      AFS_AFSDB=true
      AFS_CRYPT=true
      AFS_DYNROOT=Yes
      AFS_FAKESTAT=true

  - create-file: /etc/openafs/CellServDB.patch
    contents: |
      --- CellServDB.orig 2023-04-09 10:35:20.960000000 -0400
      +++ CellServDB  2023-04-09 10:40:12.440000000 -0400
      @@ -225,5 +225,5 @@
       >cs.cmu.edu             #Carnegie Mellon University - School of Comp. Sci.
      -128.2.172.58                    #date.srv.cs.cmu.edu
      -128.2.172.60                    #fig.srv.cs.cmu.edu
      -128.2.200.97                    #watermelon.srv.cs.cmu.edu
      +128.2.104.79                    #afsdb-scs-01.srv.cs.cmu.edu
      +128.2.104.80                    #afsdb-scs-02.srv.cs.cmu.edu
      +128.2.156.64                    #afsdb-scs-03.srv.cs.cmu.edu
       >ece.cmu.edu            #Carnegie Mellon University - Elec. Comp. Eng. Dept.
  - chroot: rootfs
    shell: |
      patch /etc/openafs/CellServDB /etc/openafs/CellServDB.patch

  # customizations for local afs/kerberos realm
  - create-file: /etc/openafs/CellAlias
    contents: |
      andrew.cmu.edu  andrew
      cs.cmu.edu      cs
      ece.cmu.edu     ece
  - create-file: /etc/openafs/ThisCell
    contents: |
      andrew.cmu.edu
  - create-file: /etc/openafs/cacheinfo
    contents: /afs:/var/cache/openafs:1000000

  # samba configuration
  - create-file: /etc/samba/smb.conf.local
    contents: |
      add user script = /usr/sbin/useradd -s /usr/sbin/nologin -m '%u'
      preexec = /usr/bin/aklog -c andrew.cmu.edu
      preexec close = no
      [afs]
        comment = AFS Root Directory Share
        path = /afs
        afs share = yes
        vfs objects = fake_perms
        browseable = yes
        read only = no
        guest ok = yes
  - chroot: rootfs
    shell: |
      sed -i -e 's/#=\+ Share Definitions =\+/&\n\n   include = \/etc\/samba\/smb.conf.local/' /etc/samba/smb.conf

  # webauth
  - copy-dir: /app
    src: webauth
  - create-file: /etc/systemd/system/webauth.service
    contents: |
      [Unit]
      Description=Web-based authentication application
      After=network.target
      [Service]
      User=root
      WorkingDirectory=/app
      ExecStart=/usr/bin/gunicorn -b 0.0.0.0:80 -w 4 webauth:app
      Restart=always
      [Install]
      WantedBy=multi-user.target
  - chroot: rootfs
    shell: |
      systemctl enable webauth.service

  - resize-rootfs: rootfs
  - grub: bios
    tag: rootfs
